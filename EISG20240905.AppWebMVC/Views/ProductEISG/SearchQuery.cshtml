@model SearchQueryProductEISGDTO

@{
	// Obtiene el valor de CountRow de la ViewBag
	int totalRegistros = (int)ViewBag.CountRow;
	// Calcula el número total de páginas
	int totalPaginas = (int)Math.Ceiling((double)totalRegistros / Model.Take);
}

<div class="row">
	<div class="row">
		<h1 class="card-text col-md-12">Buscar Productos</h1>
	</div>
	<hr />
	<form asp-action="Index">
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>
		<input asp-for="SendRowCount" type="hidden" id="txtSendRowCount" />
		<input asp-for="Skip" type="hidden" id="txtSkip" />
		<input name="CountRow" value="@totalRegistros" type="hidden" />
		<div class="row">
			<div class="form-group col-md-5">

				<label asp-for="NombreEISG_Like" class="control-label"></label>
				<input asp-for="NombreEISG_Like" class="form-control" />
				<span asp-validation-for="NombreEISG_Like" class="text-danger"></span>
			</div>
			<div class="form-group col-md-4">
				<label asp-for="Precio_Like" class="control-label"></label>
				<input type="number" asp-for="Precio_Like" class="form-control" />
				<span asp-validation-for="Precio_Like" class="text-danger"></span>
			</div>
			<div class="form-group col-md-3">
				<label asp-for="Take" class="control-label"></label>
				<select asp-for="Take" class="form-control">
					@for (var i = 10; i < 1000; i += 10)
					{
						if (i == Model.Take)
						{
							<option selected value="@i">@i</option>
						}
						else
						{
							<option value="@i">@i</option>
						}
					}
				</select>
				<span asp-validation-for="Take" class="text-danger"></span>
			</div>
			<div class="form-group col-4" style="margin-top:10px;">
				<input type="submit" id="btnSearch" value="Buscar" style="width:100%;" class="btn btn-secondary" />
			</div>
			<h1 class="card-text col-md-12" style="margin-top:10px;">Lista de Productos</h1>
			<hr />
			<div class="form-group col-4">
				<a asp-action="Create" style="width:100%;" class="btn btn-primary">Registrar</a>
			</div>
			<div class="row" style="margin-top:10px;">
				<nav aria-label="Page navigation example">
					<ul class="pagination">
						@{
							int skipAnte = Model.Skip > 0 ? Model.Skip - Model.Take : 0;
							int skipMax = 0;
						}
						<li class="page-item"><a class="page-link" data-skip="@skipAnte" href="#" onclick="paginacion(this)">Anterior</a></li>
						@for (var i = 0; i < totalPaginas; i++)
						{
							int skip = i * Model.Take;
							int numPag = i + 1;
							if (skip != Model.Skip)
							{
								<li class="page-item"><a class="page-link" data-skip="@skip" href="#" onclick="paginacion(this)">@numPag</a></li>
							}
							else
							{
								<li class="page-item active"><a class="page-link" data-skip="@skip" href="#" onclick="paginacion(this)">@numPag</a></li>
							}
							skipMax = skip;
						}
						@{
							int skipSi = Model.Skip + Model.Take;
							skipSi = skipSi > skipMax ? skipSi - Model.Take : skipSi;
						}
						<li class="page-item"><a class="page-link" data-skip="@skipSi" href="#" onclick="paginacion(this)">Siguiente</a></li>
					</ul>
				</nav>
			</div>
			<div class="row">
				<div class="col-md-6">
					<span class="fw-bold">Total registros: <span class="badge bg-primary">@totalRegistros</span></span>
				</div>
			</div>
		</div>








	</form>




</div>
<script>
	function paginacion(li) {
		const skip = li.getAttribute("data-skip");
		const btnSearch = document.getElementById("btnSearch");
		const txtSkip = document.getElementById("txtSkip");
		const txtSendRowCount = document.getElementById("txtSendRowCount");
		txtSkip.value = skip;
		txtSendRowCount.value = 1;
		btnSearch.click();
	}
</script>